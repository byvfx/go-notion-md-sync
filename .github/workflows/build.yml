name: Build Binaries

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/claude.yml'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/claude.yml'

# Cancel in-progress workflows when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Run tests once, not per platform
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run linter
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

  # Build only for current platform on PRs
  build-pr:
    if: github.event_name == 'pull_request'
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Build binary (Linux only for PR)
      env:
        GOOS: linux
        GOARCH: amd64
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o notion-md-sync ./cmd/notion-md-sync

  # Full cross-platform build only for main branch and tags
  build-release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Set binary name
      id: binary
      run: |
        BINARY_NAME=notion-md-sync
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        echo "name=${BINARY_NAME}" >> $GITHUB_OUTPUT
        echo "archive=notion-md-sync-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o ${{ steps.binary.outputs.name }} ./cmd/notion-md-sync

    - name: Create archive
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip ${{ steps.binary.outputs.archive }}.zip ${{ steps.binary.outputs.name }}
        else
          tar -czf ${{ steps.binary.outputs.archive }}.tar.gz ${{ steps.binary.outputs.name }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.binary.outputs.archive }}
        path: |
          ${{ steps.binary.outputs.archive }}.zip
          ${{ steps.binary.outputs.archive }}.tar.gz

  # Create release only for tags
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/notion-md-sync-*
        generate_release_notes: true
        draft: false
        prerelease: false