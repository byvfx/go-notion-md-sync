name: Build Binaries

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude arm64 for windows as it's less common
          - goos: windows
            goarch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Set binary name
      id: binary
      run: |
        BINARY_NAME=notion-md-sync
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="${BINARY_NAME}.exe"
        fi
        echo "name=${BINARY_NAME}" >> $GITHUB_OUTPUT
        echo "archive=notion-md-sync-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        go build -ldflags="-s -w" -o ${{ steps.binary.outputs.name }} ./cmd/notion-md-sync

    - name: Create archive
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          zip ${{ steps.binary.outputs.archive }}.zip ${{ steps.binary.outputs.name }}
        else
          tar -czf ${{ steps.binary.outputs.archive }}.tar.gz ${{ steps.binary.outputs.name }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ steps.binary.outputs.archive }}
        path: |
          ${{ steps.binary.outputs.archive }}.zip
          ${{ steps.binary.outputs.archive }}.tar.gz

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          **/notion-md-sync-*
        generate_release_notes: true
        draft: false
        prerelease: false